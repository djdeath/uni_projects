Grammaire

  Nombre, ligne, règle
    1  54 PROGRAMME -> /* vide */
    2  55 PROGRAMME -> command ';' PROGRAMME
    3  58 @1 -> /* vide */
    4  58 command -> FUNC_START function @1 defargs
    5  59 command -> FUNC_END function
    6  60 @2 -> /* vide */
    7  60 command -> STRING LABEL @2 SSTRING
    8  61 command -> var '=' expr
    9  62 command -> TRY LABEL
   10  63 command -> CALL function args
   11  72 command -> CALL function LABEL
   12  73 command -> CMP var var
   13  80 @3 -> /* vide */
   14  80 command -> JC @3 LABEL
   15  81 command -> JMP LABEL
   16  82 command -> LABEL
   17  83 command -> RET var
   18  84 command -> RET
   19  87 expr -> var '+' var
   20  94 expr -> var '*' var
   21 101 expr -> var '-' var
   22 108 expr -> var '/' var
   23 115 expr -> var '%' var
   24 122 expr -> var '<' var
   25 129 expr -> var '>' var
   26 136 expr -> var
   27 137 expr -> '~' var
   28 143 expr -> '-' var
   29 149 expr -> var '|' var
   30 156 expr -> var '&' var
   31 163 expr -> var '^' var
   32 170 expr -> CALL function args
   33 179 expr -> SV
   34 182 var -> IDENTIFIER
   35 183 var -> CONSTANT
   36 186 function -> IDENTIFIER
   37 189 args -> /* vide */
   38 190 args -> args_
   39 193 args_ -> var
   40 194 args_ -> args_ var
   41 197 defargs -> /* vide */
   42 198 defargs -> defargs_
   43 201 defargs_ -> defvararg
   44 202 defargs_ -> defvararg defargs_
   45 205 defvararg -> IDENTIFIER


Terminaux, suivis des règles où ils apparaissent

$ (-1)
'%' (37) 23
'&' (38) 30
'*' (42) 20
'+' (43) 19
'-' (45) 21 28
'/' (47) 22
';' (59) 2
'<' (60) 24
'=' (61) 8
'>' (62) 25
'^' (94) 31
'|' (124) 29
'~' (126) 27
error (256)
CMP (257) 12
JC (258) 14
SV (259) 33
JMP (260) 15
FUNC_START (261) 4
FUNC_END (262) 5
CALL (263) 10 11 32
RET (264) 17 18
TRY (265) 9
IDENTIFIER (266) 34 36 45
CONSTANT (267) 35
LABEL (268) 7 9 11 14 15 16
STRING (269) 7
SSTRING (270) 7


Non-terminaux, suivis des règles où ils apparaissent

PROGRAMME (30)
    à gauche: 1 2, à droite: 2
command (31)
    à gauche: 4 5 7 8 9 10 11 12 14 15 16 17 18, à droite: 2
@1 (32)
    à gauche: 3, à droite: 4
@2 (33)
    à gauche: 6, à droite: 7
@3 (34)
    à gauche: 13, à droite: 14
expr (35)
    à gauche: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33,
    à droite: 8
var (36)
    à gauche: 34 35, à droite: 8 12 17 19 20 21 22 23 24 25 26 27 28
    29 30 31 39 40
function (37)
    à gauche: 36, à droite: 4 5 10 11 32
args (38)
    à gauche: 37 38, à droite: 10 32
args_ (39)
    à gauche: 39 40, à droite: 38 40
defargs (40)
    à gauche: 41 42, à droite: 4
defargs_ (41)
    à gauche: 43 44, à droite: 42 44
defvararg (42)
    à gauche: 45, à droite: 43 44


état 0

    CMP 	décalage et aller à l'état 1
    JC  	décalage et aller à l'état 2
    JMP 	décalage et aller à l'état 3
    FUNC_START	décalage et aller à l'état 4
    FUNC_END	décalage et aller à l'état 5
    CALL	décalage et aller à l'état 6
    RET 	décalage et aller à l'état 7
    TRY 	décalage et aller à l'état 8
    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10
    LABEL	décalage et aller à l'état 11
    STRING	décalage et aller à l'état 12

    $défaut	réduction par la règle 1 (PROGRAMME)

    PROGRAMME	aller à l'état 73
    command	aller à l'état 13
    var 	aller à l'état 14



état 1

    command  ->  CMP . var var   (règle 12)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 15



état 2

    command  ->  JC . @3 LABEL   (règle 14)

    $défaut	réduction par la règle 13 (@3)

    @3  	aller à l'état 16



état 3

    command  ->  JMP . LABEL   (règle 15)

    LABEL	décalage et aller à l'état 17



état 4

    command  ->  FUNC_START . function @1 defargs   (règle 4)

    IDENTIFIER	décalage et aller à l'état 18

    function	aller à l'état 19



état 5

    command  ->  FUNC_END . function   (règle 5)

    IDENTIFIER	décalage et aller à l'état 18

    function	aller à l'état 20



état 6

    command  ->  CALL . function args   (règle 10)
    command  ->  CALL . function LABEL   (règle 11)

    IDENTIFIER	décalage et aller à l'état 18

    function	aller à l'état 21



état 7

    command  ->  RET . var   (règle 17)
    command  ->  RET .   (règle 18)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    $défaut	réduction par la règle 18 (command)

    var 	aller à l'état 22



état 8

    command  ->  TRY . LABEL   (règle 9)

    LABEL	décalage et aller à l'état 23



état 9

    var  ->  IDENTIFIER .   (règle 34)

    $défaut	réduction par la règle 34 (var)



état 10

    var  ->  CONSTANT .   (règle 35)

    $défaut	réduction par la règle 35 (var)



état 11

    command  ->  LABEL .   (règle 16)

    $défaut	réduction par la règle 16 (command)



état 12

    command  ->  STRING . LABEL @2 SSTRING   (règle 7)

    LABEL	décalage et aller à l'état 24



état 13

    PROGRAMME  ->  command . ';' PROGRAMME   (règle 2)

    ';' 	décalage et aller à l'état 25



état 14

    command  ->  var . '=' expr   (règle 8)

    '=' 	décalage et aller à l'état 26



état 15

    command  ->  CMP var . var   (règle 12)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 27



état 16

    command  ->  JC @3 . LABEL   (règle 14)

    LABEL	décalage et aller à l'état 28



état 17

    command  ->  JMP LABEL .   (règle 15)

    $défaut	réduction par la règle 15 (command)



état 18

    function  ->  IDENTIFIER .   (règle 36)

    $défaut	réduction par la règle 36 (function)



état 19

    command  ->  FUNC_START function . @1 defargs   (règle 4)

    $défaut	réduction par la règle 3 (@1)

    @1  	aller à l'état 29



état 20

    command  ->  FUNC_END function .   (règle 5)

    $défaut	réduction par la règle 5 (command)



état 21

    command  ->  CALL function . args   (règle 10)
    command  ->  CALL function . LABEL   (règle 11)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10
    LABEL	décalage et aller à l'état 30

    $défaut	réduction par la règle 37 (args)

    var 	aller à l'état 31
    args	aller à l'état 32
    args_	aller à l'état 33



état 22

    command  ->  RET var .   (règle 17)

    $défaut	réduction par la règle 17 (command)



état 23

    command  ->  TRY LABEL .   (règle 9)

    $défaut	réduction par la règle 9 (command)



état 24

    command  ->  STRING LABEL . @2 SSTRING   (règle 7)

    $défaut	réduction par la règle 6 (@2)

    @2  	aller à l'état 34



état 25

    PROGRAMME  ->  command ';' . PROGRAMME   (règle 2)

    CMP 	décalage et aller à l'état 1
    JC  	décalage et aller à l'état 2
    JMP 	décalage et aller à l'état 3
    FUNC_START	décalage et aller à l'état 4
    FUNC_END	décalage et aller à l'état 5
    CALL	décalage et aller à l'état 6
    RET 	décalage et aller à l'état 7
    TRY 	décalage et aller à l'état 8
    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10
    LABEL	décalage et aller à l'état 11
    STRING	décalage et aller à l'état 12

    $défaut	réduction par la règle 1 (PROGRAMME)

    PROGRAMME	aller à l'état 35
    command	aller à l'état 13
    var 	aller à l'état 14



état 26

    command  ->  var '=' . expr   (règle 8)

    SV  	décalage et aller à l'état 36
    CALL	décalage et aller à l'état 37
    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10
    '-' 	décalage et aller à l'état 38
    '~' 	décalage et aller à l'état 39

    expr	aller à l'état 40
    var 	aller à l'état 41



état 27

    command  ->  CMP var var .   (règle 12)

    $défaut	réduction par la règle 12 (command)



état 28

    command  ->  JC @3 LABEL .   (règle 14)

    $défaut	réduction par la règle 14 (command)



état 29

    command  ->  FUNC_START function @1 . defargs   (règle 4)

    IDENTIFIER	décalage et aller à l'état 42

    $défaut	réduction par la règle 41 (defargs)

    defargs	aller à l'état 43
    defargs_	aller à l'état 44
    defvararg	aller à l'état 45



état 30

    command  ->  CALL function LABEL .   (règle 11)

    $défaut	réduction par la règle 11 (command)



état 31

    args_  ->  var .   (règle 39)

    $défaut	réduction par la règle 39 (args_)



état 32

    command  ->  CALL function args .   (règle 10)

    $défaut	réduction par la règle 10 (command)



état 33

    args  ->  args_ .   (règle 38)
    args_  ->  args_ . var   (règle 40)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    $défaut	réduction par la règle 38 (args)

    var 	aller à l'état 46



état 34

    command  ->  STRING LABEL @2 . SSTRING   (règle 7)

    SSTRING	décalage et aller à l'état 47



état 35

    PROGRAMME  ->  command ';' PROGRAMME .   (règle 2)

    $défaut	réduction par la règle 2 (PROGRAMME)



état 36

    expr  ->  SV .   (règle 33)

    $défaut	réduction par la règle 33 (expr)



état 37

    expr  ->  CALL . function args   (règle 32)

    IDENTIFIER	décalage et aller à l'état 18

    function	aller à l'état 48



état 38

    expr  ->  '-' . var   (règle 28)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 49



état 39

    expr  ->  '~' . var   (règle 27)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 50



état 40

    command  ->  var '=' expr .   (règle 8)

    $défaut	réduction par la règle 8 (command)



état 41

    expr  ->  var . '+' var   (règle 19)
    expr  ->  var . '*' var   (règle 20)
    expr  ->  var . '-' var   (règle 21)
    expr  ->  var . '/' var   (règle 22)
    expr  ->  var . '%' var   (règle 23)
    expr  ->  var . '<' var   (règle 24)
    expr  ->  var . '>' var   (règle 25)
    expr  ->  var .   (règle 26)
    expr  ->  var . '|' var   (règle 29)
    expr  ->  var . '&' var   (règle 30)
    expr  ->  var . '^' var   (règle 31)

    '+' 	décalage et aller à l'état 51
    '*' 	décalage et aller à l'état 52
    '-' 	décalage et aller à l'état 53
    '/' 	décalage et aller à l'état 54
    '%' 	décalage et aller à l'état 55
    '<' 	décalage et aller à l'état 56
    '>' 	décalage et aller à l'état 57
    '|' 	décalage et aller à l'état 58
    '&' 	décalage et aller à l'état 59
    '^' 	décalage et aller à l'état 60

    $défaut	réduction par la règle 26 (expr)



état 42

    defvararg  ->  IDENTIFIER .   (règle 45)

    $défaut	réduction par la règle 45 (defvararg)



état 43

    command  ->  FUNC_START function @1 defargs .   (règle 4)

    $défaut	réduction par la règle 4 (command)



état 44

    defargs  ->  defargs_ .   (règle 42)

    $défaut	réduction par la règle 42 (defargs)



état 45

    defargs_  ->  defvararg .   (règle 43)
    defargs_  ->  defvararg . defargs_   (règle 44)

    IDENTIFIER	décalage et aller à l'état 42

    $défaut	réduction par la règle 43 (defargs_)

    defargs_	aller à l'état 61
    defvararg	aller à l'état 45



état 46

    args_  ->  args_ var .   (règle 40)

    $défaut	réduction par la règle 40 (args_)



état 47

    command  ->  STRING LABEL @2 SSTRING .   (règle 7)

    $défaut	réduction par la règle 7 (command)



état 48

    expr  ->  CALL function . args   (règle 32)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    $défaut	réduction par la règle 37 (args)

    var 	aller à l'état 31
    args	aller à l'état 62
    args_	aller à l'état 33



état 49

    expr  ->  '-' var .   (règle 28)

    $défaut	réduction par la règle 28 (expr)



état 50

    expr  ->  '~' var .   (règle 27)

    $défaut	réduction par la règle 27 (expr)



état 51

    expr  ->  var '+' . var   (règle 19)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 63



état 52

    expr  ->  var '*' . var   (règle 20)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 64



état 53

    expr  ->  var '-' . var   (règle 21)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 65



état 54

    expr  ->  var '/' . var   (règle 22)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 66



état 55

    expr  ->  var '%' . var   (règle 23)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 67



état 56

    expr  ->  var '<' . var   (règle 24)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 68



état 57

    expr  ->  var '>' . var   (règle 25)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 69



état 58

    expr  ->  var '|' . var   (règle 29)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 70



état 59

    expr  ->  var '&' . var   (règle 30)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 71



état 60

    expr  ->  var '^' . var   (règle 31)

    IDENTIFIER	décalage et aller à l'état 9
    CONSTANT	décalage et aller à l'état 10

    var 	aller à l'état 72



état 61

    defargs_  ->  defvararg defargs_ .   (règle 44)

    $défaut	réduction par la règle 44 (defargs_)



état 62

    expr  ->  CALL function args .   (règle 32)

    $défaut	réduction par la règle 32 (expr)



état 63

    expr  ->  var '+' var .   (règle 19)

    $défaut	réduction par la règle 19 (expr)



état 64

    expr  ->  var '*' var .   (règle 20)

    $défaut	réduction par la règle 20 (expr)



état 65

    expr  ->  var '-' var .   (règle 21)

    $défaut	réduction par la règle 21 (expr)



état 66

    expr  ->  var '/' var .   (règle 22)

    $défaut	réduction par la règle 22 (expr)



état 67

    expr  ->  var '%' var .   (règle 23)

    $défaut	réduction par la règle 23 (expr)



état 68

    expr  ->  var '<' var .   (règle 24)

    $défaut	réduction par la règle 24 (expr)



état 69

    expr  ->  var '>' var .   (règle 25)

    $défaut	réduction par la règle 25 (expr)



état 70

    expr  ->  var '|' var .   (règle 29)

    $défaut	réduction par la règle 29 (expr)



état 71

    expr  ->  var '&' var .   (règle 30)

    $défaut	réduction par la règle 30 (expr)



état 72

    expr  ->  var '^' var .   (règle 31)

    $défaut	réduction par la règle 31 (expr)



état 73

    $   	aller à l'état 74



état 74

    $   	aller à l'état 75



état 75

    $défaut	accepter


